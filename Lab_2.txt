Novice:
* Создайте файл, имя которого начинается с точки: touch .temp
* Скрытые файлы и директории в домашней директории:
.
..
.CFUserTextEncoding
.DS_Store
.IdentityService
.ServiceHub
.Trash
.android
.bash_history
.bash_profile
.bash_sessions
.config
.idlerc
.lesshst
.local
.mono
.ssh
.subversion
.temp
.templateengine
.viminfo
.wget-hsts
* Принцип поиска find по скрытым файлам и директориям:
find .  будет искать везде
find *  проигнорирует скрытые папки на текущем уровне

Advanced:
* Директории программ:
cat: /bin/cat
less: /usr/bin/less
grep: /usr/bin/grep
find: /usr/bin/find
* Значение переменной окружения $PATH: 
/Library/Frameworks/Python.framework/Versions/3.6/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Frameworks/Mono.framework/Versions/Current/Commands
* Компиляция программы на C и запуск из в той же директории / из другой директории:
gcc main.c -o main1 
open main1
cd
open ~/Desktop/untitled1/main1
* Добавьте директорию, в которой лежит программа из пункта 3:
export PATH=$PATH:/Users/beryanow/Desktop/untitled1/

Expert:
* Создайте в своей домашней директорию файл под названием shared.txt:
touch shared.txt
Права доступа shared.txt: -rw-r--r--
(Все пользователи имеют право чтения; владелец может читать и редактировать)
* Сделать так, чтобы созданный файл был доступен только его владельцу и только на чтение.
chmod 400 shared.txt 
* С помощью команды chown измените владельца файла shared.txt:
sudo chown root /Users/beryanow/shared.txt
* Объясните что было бы, если операции из пункта 3 и 4 можно было бы делать обычным пользователям:
Любой мог бы их заполучить: изменить владельца файла и права доступа (600 / 700) к файлу.
